---
import "@fontsource/work-sans";
export interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props as Props;
const canonicalURL = new URL(Astro.url).href;
---

<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <link rel="canonical" href={canonicalURL} />
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <!-- <meta property="og:image" content={ImageURL} />
        <meta property="og:image:alt" content={imageAlt} /> -->
    <meta property="og:site_name" content={title} />
    <meta property="og:locale" content="en_US" />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta name="twitter:site" content="@twitter" />
    <meta name="twitter:creator" content="@twitter" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <!-- <meta property="twitter:image" content={ImageURL} /> -->
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      // credits to satnaing on github
      const primaryColorScheme = "none";
      const darkModeMediaQuery = window.matchMedia("(prefers-color-scheme: dark)").matches;
      const currentTheme = localStorage.getItem("theme");
      let theme;
      if (currentTheme) {
        theme = currentTheme === "dark" ? "dark" : "";
      } else {
        if (primaryColorScheme === "dark" || (primaryColorScheme === "none" && darkModeMediaQuery)) {
          theme = "dark";
        } else if (primaryColorScheme === "light") {
          theme = "";
        } else {
          theme = darkModeMediaQuery ? "dark" : "";
        }
      }
      document.documentElement.className = theme;
    </script>
    <!-- <script>
      const themeBtn = document.querySelector(".theme-toggle");
      const htmlClassList = document.documentElement.classList;
      themeBtn.addEventListener("click", function () {
        if (htmlClassList.contains("dark")) {
          localStorage.setItem("theme", "light");
          htmlClassList.remove("dark");
        } else {
          localStorage.setItem("theme", "dark");
          htmlClassList.add("dark");
        }
      });
    </script> -->
  </head>
  <body class="font-worksans bg-slate-900 text-white">
    <main class="m-auto p-6 max-w-4xl">
      <slot />
    </main>
    <footer class="grid place-items-center py-3 text-lg">
      <p>Made with ü§ç by <a href="https://lanceross.xyz" target="_blank" class="text-blue-500">Lance Ross</a></p>
    </footer>
  </body>
</html>
